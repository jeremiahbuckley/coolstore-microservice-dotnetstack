apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice-dotnet
  template: coolstore-dotnet
metadata:
  annotations:
    description: CoolStore demo microservices application template (dotnet)
    iconClass: icon-dotnet
    tags: microservice,dotnet,.net
  name: coolstore-dotnet
message: "This currently deploys the coolstore-catalog microservice only."
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
# Catalog Service
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: catalog
    labels:
      app: catalog
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: catalog
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: catalog:latest
    source:
      contextDir: catalog-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: dotnet:2.2
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog
    labels:
      app: catalog
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: catalog
          deploymentconfig: catalog
        name: catalog
      spec:
        containers:
        - env:
          - name: DB_SERVER
            value: catalog-mongodb
          - name: DB_NAME
            value: catalogdb
          - name: DB_USERNAME
            value: ${CATALOG_DB_USERNAME}
          - name: DB_PASSWORD
            value: ${CATALOG_DB_PASSWORD}
          image: catalog
          imagePullPolicy: Always
          name: catalog
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog
        from:
          kind: ImageStreamTag
          name: catalog:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"catalog-mongodb","namespace":"","kind":"Service"}]'
    labels:
      app: catalog
    name: catalog
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: catalog
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: catalog
    name: catalog-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deploymentconfig: catalog-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: catalog
      comp-type: database
    name: catalog-mongodb
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog-mongodb
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: catalog
          comp-type: database
          deploymentconfig: catalog-mongodb
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGODB_USER
            value: ${CATALOG_DB_USERNAME}
          - name: MONGODB_PASSWORD
            value: ${CATALOG_DB_PASSWORD}
          - name: MONGODB_DATABASE
            value: catalogdb
          - name: MONGODB_ADMIN_PASSWORD
            value: ${CATALOG_DB_PASSWORD}
          image: mongodb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: catalog-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 10
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: mongodb-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog-mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
  value: https://github.com/jeremiahbuckley/coolstore-microservice-dotnetstack.git
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
- description: Catalog Service database user name
  displayName: Catalog Database username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: CATALOG_DB_USERNAME
  required: true
- description: Catalog Service database user password
  displayName: Catalog Database password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: CATALOG_DB_PASSWORD
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
  displayName: ImageStream Namespace
  value: openshift
  name: IMAGE_STREAM_NAMESPACE
  required: true
